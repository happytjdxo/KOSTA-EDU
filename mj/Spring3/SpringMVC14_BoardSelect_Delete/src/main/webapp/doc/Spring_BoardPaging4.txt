***** SpringMVC 로그인 게시판 ( writing, select, delete,update, paging 기능 ) *****

***** step1 *****
로그인 처리 
로그인한 사용자는 글쓰기 허용 
글쓴 이후에 개별 게시글 보기까지  

**step2**
목록보기 - 최근 게시물 5개만 (페이징은 이후에 처리) : 게시물 정보 외에 글 쓴 회원의 이름이 필요 
	   목록보기(list.jsp) 까지는 비로그인 사용자가 목록 확인 가능 
	   목록에서 링크된 개별 게시물 보기는 로그인한 사용자만 확인 가능하다. 
	   비로그인 사용자가 클릭시에는 index.jsp 로 이동시킨다. 
삭제기능 - 전체목록보기에서 자신의 쓴 글만 삭제가능
           자신의 글이 아닐 경우에는 목록보기 기능만 가능

**step3**
수정  -  로그인한 사용자 자신이 작성한 글만 수정 가능
         개별 게시물을 볼때마다 조회수를 증가


**step4**
페이징 - 페이지당 게시물 수 5
	    페이지 그룹당 페이지수 4


1. db modeling : 필요 테이블 , 컬럼 , 테이블 관계 , 제약조건 
		
		member |---0<- springboard
		

		create table member(
			id varchar2(50) primary key,
			password varchar2(50) not null,
			name varchar2(50) not null,
			address varchar2(50)
		);

		create sequence springboard_inst_seq nocache;
		create table springboard(
			no number primary key,
			title varchar2(100) not null,
			content varchar2(1000) not null,
			count number default 0,
			w_date date not null,
			id varchar2(50) not null,
			constraint fk_id foreign key(id) references member(id)
		);

2. 적용기술 : Spring MVC + DI + ibatis 

3. file list :   < Model >
		model.MemberVO
		model.MemberDao
		model.MemberService
		
		model.BoardVO(has a MemberVO)
		model.BoardDao
		model.BoardService
		
		(추가됨)
		model.PagingBean
		model.CommonConstants
		model.ListVO(List<BoardVO>,PagingBean)


		< Controller >
		control.MemberController
		control.BoardController
						 
		< View >
		member/login_result.jsp(alert 처리) 
		board/write.jsp	,show_content.jsp , list.jsp , update.jsp
			
		< MetaData > : 
		  WEB-INF/
		     web.xml 
			 dispatcher-servlet.xml
			 SqlMapConfig.xml
		     src/config/	  
			  	member.xml		
			  	board.xml 	
						   
********** step4 추가, 변경되는 로직 개요 ***************
--> 
1)board.xml : 전체 글의 게시물수를 알아오는 쿼리문을 하나 작성
              id는 totalCount로 하자.
2)BoardDao : totalCount() 하나 추가한다.
3)BoardService : getBoardList()를 수정한다.
                          메소드의 선언부가 public ListVO getBoardList(String pageNo){
                          가 되도록 하자. 이제까지는 무조건 최신 페이지를 의미하는 no가 인자값이었지만 이름도 변경한다.
                  
                          특정 페이지의 게시물이 보여지도록 한다.
                          즉, 리턴되는 객체 ListVO를 생성해야 하는데 
                  ListVO = List<BoardVO>+PagingBean
                  ListVO를 생성하고 그 안에 게시물 리스트와 페이징빈을 할당한다.
4)BoardController : list(), delete() 를 수정
5)list.jsp 추가및 수정
6)CommonConstants/ListVO/PagingBean는 추가