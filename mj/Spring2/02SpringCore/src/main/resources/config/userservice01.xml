<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 개발자 정의 인스턴스 생성 :: setter 주입 :: 단순 프라퍼티값 주입 -->
<bean id = "user01" class = "spring.service.domain.User">
	<property name="userId" value="01유저"/>
	<property name="age" value = "01"/>
</bean>

<!-- API 인스턴스 생성 :: 생성자 주입 :: 단순 프라퍼티값 주입 -->
<bean id = "password" class = "java.lang.String">
	<constructor-arg value = "7777"/>
</bean>

<!-- 개발자 정의 인스턴스 생성 :: setter 주입 :: 단순 프라퍼티값 주입 -->
<bean id = "user02" class = "spring.service.domain.User">
	<property name="age" value = "02"/>
	<property name="userId" value = "02유저"/>
	<property name="password" value = "password"/>
</bean>

<!-- 개발자 정의 인스턴스 생성 :: DI가 없음 -->
<bean id = "user03" class = "spring.service.domain.User">
</bean>

<!-- 개발자 정의 인스턴스 생성 :: 생성자 주입 :: 단순 프라퍼티값 주입 -->
<!-- 
	생성자로 단순 프라퍼티 값을 여러개 주입할때 주의해야 한다.
	에러가 발생하지 않고 잘못된 값이 주입되어 진다..
	결국은 이러한 점 때문에 setter주입을 더 선호한다.. 어디서? -> 현업에서..
	판단은 여러분이 하세요..
	
	index, type, name 세가지 속성을 이용하면 이러한 문제점을 해결할 수 있다.
 -->
<bean id = "user04" class = "spring.service.domain.User">
	<constructor-arg value = "0404"/>
	<constructor-arg value = "04유저"/>
</bean>

<!--  -->
<bean id = "user05" class = "spring.service.domain.User">
	<constructor-arg name = "age" value = "05"/>
	<constructor-arg index = "2" value = "유저05"/>
	<constructor-arg type = "java.lang.String" ref = "password"/>
</bean>
</beans>
